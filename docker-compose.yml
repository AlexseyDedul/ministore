name: ministore
services:
  # Infrastructure
  keycloak:
    image: quay.io/keycloak/keycloak:23.0.4
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    volumes:
      - './config/keycloak/import:/opt/keycloak/data/import'
    ports:
      - '8082:8080'
    command: start-dev --import-realm
    healthcheck:
      test: [
        "CMD-SHELL",
        'exec 3<>/dev/tcp/localhost/8080; echo -e "GET /health/ready HTTP/1.1\nhost: localhost:8080\n" >&3; timeout --preserve-status 1 cat <&3 | grep -m 1 status | grep -m 1 UP; ERROR=$?; exec 3<&-; exec 3>&-; exit $ERROR'
      ]
      interval: 10s
      timeout: 15s
      retries: 10
      start_period: 30s
  tempo:
    image: grafana/tempo:2.3.1
    command: -config.file=/etc/tempo.yml
    volumes:
      - './config/tempo/tempo.yml:/etc/tempo.yml'
    ports:
      - '3200:3200'
      - '9095:9095'
      - '4317:4317'
      - '4318:4318'
      - '9411:9411'
      - '14268:14268'
    healthcheck:
      test: [ "CMD-SHELL", "wget -q -O - http://localhost:3200/metrics | grep -q tempo_build_info || exit 1" ]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 30s
  loki:
    image: grafana/loki:2.9.4
    ports:
      - '3100:3100'
    healthcheck:
      test: ["CMD-SHELL", "wget -q -O - http://localhost:3100/ready | grep -q ready || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
  grafana:
    image: grafana/grafana:10.2.4
    ports:
      - '3000:3000'
    volumes:
      - './data/grafana:/var/lib/grafana'
    user: '1000'
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000/api/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
  victoria-metrics:
    image: victoriametrics/victoria-metrics:v1.93.12
    command: -promscrape.config=/promscrape.yml
    volumes:
      - './config/victoria-metrics/promscrape_docker_compose.yml:/promscrape.yml'
    ports:
      - '8428:8428'
    healthcheck:
      test: ["CMD-SHELL", "wget -q -O - http://127.0.0.1:8428/ready | grep -q OK || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 10s
    depends_on:
      admin-server:
        condition: service_started
      api-gateway:
        condition: service_started
      catalogue-service:
        condition: service_started
      feedback-service:
        condition: service_started
      customer-app:
        condition: service_started
      manager-app:
        condition: service_started
  catalogue-db:
    image: postgres:16
    ports:
      - '5433:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: catalogue
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "catalogue"]
      interval: 10s
      timeout: 5s
      retries: 5
  feedback-db:
    image: mongo:7
    ports:
      - '27017:27017'
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
  # Services
  config-server:
    build:
      dockerfile: Dockerfile
      args:
        JAR_FILE: config-server/target/config-server-0.0.1-SNAPSHOT-exec.jar
      tags:
        - localhost:5000/ministore/config-server:0.0.1
    environment:
      SPRING_PROFILES_ACTIVE: native
      SPRING_CLOUD_CONFIG_SERVER_NATIVE_SEARCH_LOCATIONS: file:///config/{application}/{profile}
      LOKI: http://loki:3100
    volumes:
      - './config/cloud:/config'
    ports:
      - '8888:8888'
  eureka-server:
    restart: always
    build:
      dockerfile: Dockerfile
      args:
        JAR_FILE: eureka-server/target/eureka-server-0.0.1-SNAPSHOT-exec.jar
      tags:
        - localhost:5000/ministore/eureka-server:0.0.1
    environment:
      SPRING_PROFILES_ACTIVE: cloudconfig
      LOKI: http://loki:3100
    ports:
      - '8761:8761'
    depends_on:
      keycloak:
        condition: service_healthy
      config-server:
        condition: service_started
      loki:
        condition: service_healthy
  admin-server:
    restart: always
    build:
      dockerfile: Dockerfile
      args:
        JAR_FILE: admin-server/target/admin-server-0.0.1-SNAPSHOT-exec.jar
      tags:
        - localhost:5000/ministore/admin-server:0.0.1
    environment:
      SPRING_PROFILES_ACTIVE: cloudconfig
      LOKI: http://loki:3100
    ports:
      - '8085:8085'
    depends_on:
      keycloak:
        condition: service_healthy
      config-server:
        condition: service_started
      eureka-server:
        condition: service_started
      loki:
        condition: service_healthy
      tempo:
        condition: service_healthy
  catalogue-service:
    restart: always
    build:
      dockerfile: Dockerfile
      args:
        JAR_FILE: catalogue-service/target/catalogue-service-0.0.1-SNAPSHOT-exec.jar
      tags:
        - localhost:5000/ministore/catalogue-service:0.0.1
    environment:
      SPRING_PROFILES_ACTIVE: cloudconfig, gateway
      LOKI: http://loki:3100
    depends_on:
      keycloak:
        condition: service_healthy
      config-server:
        condition: service_started
      eureka-server:
        condition: service_started
      catalogue-db:
        condition: service_healthy
      loki:
        condition: service_healthy
      tempo:
        condition: service_healthy
  feedback-service:
    restart: always
    build:
      dockerfile: Dockerfile
      args:
        JAR_FILE: feedback-service/target/feedback-service-0.0.1-SNAPSHOT-exec.jar
      tags:
        - localhost:5000/ministore/feedback-service:0.0.1
    environment:
      SPRING_PROFILES_ACTIVE: cloudconfig, gateway
      LOKI: http://loki:3100
    depends_on:
      keycloak:
        condition: service_healthy
      config-server:
        condition: service_started
      eureka-server:
        condition: service_started
      feedback-db:
        condition: service_healthy
      loki:
        condition: service_healthy
      tempo:
        condition: service_healthy
  customer-app:
    restart: always
    build:
      dockerfile: Dockerfile
      args:
        JAR_FILE: customer-app/target/customer-app-0.0.1-SNAPSHOT-exec.jar
      tags:
        - localhost:5000/ministore/customer-app:0.0.1
    environment:
      SPRING_PROFILES_ACTIVE: cloudconfig, gateway
      LOKI: http://loki:3100
    depends_on:
      keycloak:
        condition: service_healthy
      config-server:
        condition: service_started
      eureka-server:
        condition: service_started
      catalogue-service:
        condition: service_started
      feedback-service:
        condition: service_started
      loki:
        condition: service_healthy
      tempo:
        condition: service_healthy
  manager-app:
    restart: always
    build:
      dockerfile: Dockerfile
      args:
        JAR_FILE: manager-app/target/manager-app-0.1.0-SNAPSHOT-exec.jar
      tags:
        - localhost:5000/ministore/manager-app:0.1.0
    environment:
      SPRING_PROFILES_ACTIVE: cloudconfig, gateway
      LOKI: http://loki:3100
    depends_on:
      keycloak:
        condition: service_healthy
      config-server:
        condition: service_started
      eureka-server:
        condition: service_started
      catalogue-service:
        condition: service_started
      loki:
        condition: service_healthy
      tempo:
        condition: service_healthy
  api-gateway:
    restart: always
    build:
      dockerfile: Dockerfile
      args:
        JAR_FILE: api-gateway/target/api-gateway-0.0.1-SNAPSHOT-exec.jar
      tags:
        - localhost:5000/ministore/api-gateway:0.0.1
    environment:
      SPRING_PROFILES_ACTIVE: cloudconfig
      LOKI: http://loki:3100
    ports:
      - '8086:8086'
    depends_on:
      keycloak:
        condition: service_healthy
      config-server:
        condition: service_started
      eureka-server:
        condition: service_started
      loki:
        condition: service_healthy
      tempo:
        condition: service_healthy